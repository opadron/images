---
name: Build & Push Containers
on: [push]
jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dockerfile:
          - [gitops, gitops,  'linux/amd64,linux/arm64']
            # TAG    CONTEXT  ARCHITECTURES

    name: Build ${{ matrix.dockerfile[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Container Tag Normal (Nightly)
        run: |
          container="ghcr.io/opadron/${{ matrix.dockerfile[0]}}:latest"
          echo "container=${container}" >> $GITHUB_ENV
          echo "versioned=${container}" >> $GITHUB_ENV

      - name: Check ${{ matrix.dockerfile[1] }} Exists
        run: |
          printf "Preparing to build ${{ env.container }} from"\
                 "${{ matrix.dockerfile[1] }}"
          if [ ! -f "${{ matrix.dockerfile[1] }}/Dockerfile" ]; then
              printf "Dockerfile for ${{ matrix.dockerfile[0] }} does not exist"
              exit 1;
          fi

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build & Deploy ${{ matrix.dockerfile[0] }}
        uses: docker/build-push-action@v2
        with:
          context: ${{matrix.dockerfile[1]}}
          platforms: ${{ matrix.dockerfile[2] }}
          push: true
          tags: |
            ${{ env.container }}
            ${{ env.versioned }}
